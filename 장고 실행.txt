- window cmd 명령어 - 
cd.. - 뒤로가기 
cd - 해당 파일로 들어가기
dir - 파일 확인(os의 ls)

---------------------------------------------------------------------------

- 프로젝트 설정 - 
1. 가상환경 설정 
 - vscode 터미널을 켜서 pip3 install virtualenv (package를 만드는 것이다.)
 - virtualenv django_venv (django_venv라는 package만들기)
 - django_venv/scripts/activate (윈도우 가상 환경을 사용하기 위한 것) or cd django_venv -> cd scripts -> activate

2. 가상환경에 django 설치
 - 1번을 다 한 후 pip install django 

3. 프로젝트 만들기(fc_community)
=> 하나의 프로그램 
 - django-admin startproject fc_community 

4. app 만들기(board)
=> 사용자의 묶음
 - cd fc_community
 - django-admin startapp board

5. app을 project에 등록 시켜주기 
 - project를 생성했을 때 생성된 폴더(fc_community)의 settings.py
 - INSTALLED_APPS 부분에 만든 app을 써주기


-------------------------------------------------------------------------

자동으로 data base 생성하기 
1. 우선 프로젝트(cd fc_community)로 들어간다
2. dir로 manage.py가 있는지 확인한다.
3. fcuser의 models.py에 db를 만들 model을 만들어야 한다.
5. fcuser의 admin.py를 수정합니다.
6. fc_community의 settings.py에서 INSTALLED_APPS부분에 fcuser을 넣어 줘야한다.

 - python manage.py makemigrations 
 - python manage.py migrate (seetings에서 app에 자동으로 넣어준다.) -> db.sqlite3 생성된다.
 
 ---------------------------------------------------------

 프로젝트 실행 (Django adminstration)
 1. cd fc_community
 2. python manage.py runserver 해서 http://..../admin 으로 들어간다.(나가기: ctrl + C )
 3. 계정 생성(django adminstration)
  - python manage.py createsuperuser
  - 아이디, 비번 입력
 4. 다시 2번 실행


 ------------------------------------------------

 django admin에 만든 user 등록하기
 1. fcuser의 admin.py, model.py에 들어가서 코딩한다.

--------------------------------------------------
templates 짜기
 - bootstrap 사용할 준비 - 
 - fcuser templates에서 register.html을 만든다.
 - https://getbootstrap.com/docs/4.5/getting-started/introduction/ 을 이용해서 만든다.
 - css, js, meta tags(starter template) 복사해서 head에 넣어준다.
 - bootstrap에서 form 코드 붙여 넣기


 - django project 안에서 볼수 있게 하기 - 
 - fcuser의 views.py로 가서 연결
 - fc_community의 urls.py로 가서 fcuser 작성
 - fcuser에 urls.py를 만들어 준다.
 - python manage.py makemigrations 
 - python manage.py migrate (seetings에서 app에 자동으로 넣어준다.) -> db.sqlite3 생성된다.
 - python manage.py runserver을 해서 주소 뒤에 /fcuser/register을 넣어서 확인해본다.


-------------------------------------------------------

CDN: 원본이 한국에 있지만 원본과 동일한 내용이 각 나라에 뿌러져 있어 여러나라 사용자들이 빠른 것을 사용하는 것

static 폴더에 js, css파일을 넣어 관리한다.
- 테마 넣기
- https://bootswatch.com/ 에서 다운받은 파일(bootstrap.min.css)을 static 폴더로 넣어준다.
- settings.py에서 경로 설정해준다.

-----------------------------------------------------

세션 
클라이언트 - 웹브라우저
쿠키 - 하나의 저장소(db를 쉽게 찾을 수 있게하는 암호)

--------------------------------------------------
로그인 기능 
 - login.html 
 - fc_community의 urls.py 
 - fcuser의 urls.py, views.py

 --------------------------------------------------

 html 같은 부분 base.html에 모아두고 
 상속으로 가볍게 처리하기


 -------------------------------------------------
 로그인 부분 form 형식으로 만들기 
  - login.html 부분을 고친다.
  - fcuser 폴더에서 forms.py를 만든다.
  - fcuser 폴더에서 views.py를 고친다.


-------------------------------------------------------
게시판 만들기(board)
 - template에 base.html 복사한후 board_list.html(게시판html) 만들기
 - fc_community의 urls.py, board의 urls.py, views.py 수정하기

model을 만들고 model을 가져오기 -> /admin에서 저장하기 -> html에 들어내기
- models.py작성 -> views.py 작성 -> admin.py 작성 -> board_list.html 작성


-----------------------------------------------------
게시판 글쓰기 만들기
 - board_write.html -> forms.py -> views.py(board_write부분) -> urls.py

로그인한 사용자가 자동으로 글쓰게 하기, 글상세 보기
 - views.py 작성
 - board_detail 할때 pk를 번호로 받아오기 위해서 urls.py에서 경로를 지정해준다.